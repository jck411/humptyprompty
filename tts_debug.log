2025-03-04 00:06:05,850 [INFO] __main__: [setup_audio] Initializing audio system
2025-03-04 00:06:05,856 [INFO] __main__: [setup_audio] Default audio output device found: OpenComm2 by Shokz
2025-03-04 00:06:05,856 [INFO] __main__: [setup_audio] Audio sink created with initial state: State.StoppedState
2025-03-04 00:06:05,857 [INFO] __main__: [QueueAudioDevice] Initialized
2025-03-04 00:06:05,857 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:05,877 [INFO] __main__: [setup_audio] Audio sink started with audio device
2025-03-04 00:06:05,878 [INFO] __main__: Audio setup completed, using async consumer loop
2025-03-04 00:06:05,969 [INFO] __main__: Created audio_consumer task
2025-03-04 00:06:05,974 [INFO] __main__: [audio_consumer] Starting async audio loop
2025-03-04 00:06:06,021 [INFO] __main__: Connected to ws://127.0.0.1:8000/ws/chat
2025-03-04 00:06:06,026 [INFO] __main__: Initial TTS state: False
2025-03-04 00:06:06,813 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:06,814 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:06,814 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:06,814 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:16,411 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:06:16,413 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:06:16,414 [INFO] __main__: [toggle_tts_async] Current state=False, target state=True
2025-03-04 00:06:16,414 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:06:16,415 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.ActiveState, buffer size: 0
2025-03-04 00:06:16,416 [INFO] __main__: [toggle_tts_async] Stopping audio sink
2025-03-04 00:06:16,417 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:06:16,418 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:16,419 [INFO] __main__: [toggle_tts_async] Audio sink stopped, new state: State.StoppedState
2025-03-04 00:06:16,420 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:16,428 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:06:16,433 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 0 items
2025-03-04 00:06:16,434 [INFO] __main__: [toggle_tts_async] Cleared 0 items from audio queue
2025-03-04 00:06:16,434 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:06:16,435 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:06:16,446 [INFO] __main__: [toggle_tts_async] Server responded in 0.01s with status 200
2025-03-04 00:06:16,447 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=True
2025-03-04 00:06:16,450 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:06:16,451 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:06:16,451 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:06:16,452 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:06:16,453 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:16,455 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:06:16,457 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:06:16,459 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:16,461 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:06:16,509 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:16,509 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:16,510 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:06:16,510 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: True
2025-03-04 00:06:16,511 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:06:17,037 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:06:18,347 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:06:18,348 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:06:18,348 [INFO] __main__: [toggle_tts_async] Current state=True, target state=False
2025-03-04 00:06:18,349 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:06:18,349 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.ActiveState, buffer size: 0
2025-03-04 00:06:18,350 [INFO] __main__: [toggle_tts_async] Stopping audio sink
2025-03-04 00:06:18,351 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:06:18,351 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:18,352 [INFO] __main__: [toggle_tts_async] Audio sink stopped, new state: State.StoppedState
2025-03-04 00:06:18,352 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:18,358 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:06:18,359 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 0 items
2025-03-04 00:06:18,359 [INFO] __main__: [toggle_tts_async] Cleared 0 items from audio queue
2025-03-04 00:06:18,359 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:06:18,360 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:06:18,376 [INFO] __main__: [toggle_tts_async] Server responded in 0.01s with status 200
2025-03-04 00:06:18,377 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=False
2025-03-04 00:06:18,379 [INFO] __main__: [toggle_tts_async] Ensuring TTS is fully stopped on server
2025-03-04 00:06:18,392 [INFO] __main__: [toggle_tts_async] TTS stop request successful: {'status': 'success', 'message': 'TTS stopped'}
2025-03-04 00:06:18,394 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:06:18,395 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:06:18,395 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:06:18,396 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:06:18,396 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:18,397 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:06:18,399 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:06:18,400 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:18,400 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:06:18,445 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:18,445 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:18,446 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:06:18,446 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: False
2025-03-04 00:06:18,446 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:06:18,972 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:06:19,516 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:06:19,516 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:06:19,517 [INFO] __main__: [toggle_tts_async] Current state=False, target state=True
2025-03-04 00:06:19,517 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:06:19,517 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.ActiveState, buffer size: 0
2025-03-04 00:06:19,517 [INFO] __main__: [toggle_tts_async] Stopping audio sink
2025-03-04 00:06:19,517 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:06:19,518 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:19,518 [INFO] __main__: [toggle_tts_async] Audio sink stopped, new state: State.StoppedState
2025-03-04 00:06:19,519 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:19,521 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:06:19,522 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 0 items
2025-03-04 00:06:19,522 [INFO] __main__: [toggle_tts_async] Cleared 0 items from audio queue
2025-03-04 00:06:19,522 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:06:19,522 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:06:19,529 [INFO] __main__: [toggle_tts_async] Server responded in 0.01s with status 200
2025-03-04 00:06:19,530 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=True
2025-03-04 00:06:19,530 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:06:19,530 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:06:19,531 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:06:19,531 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:06:19,531 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:19,531 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:06:19,532 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:06:19,532 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:19,532 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:06:19,550 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:19,551 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:19,551 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:06:19,551 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: True
2025-03-04 00:06:19,551 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:06:20,077 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:06:20,133 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:20,134 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:20,152 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:20,155 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:21,070 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:21,070 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:21,071 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:21,071 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:24,982 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:06:25,105 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:25,137 [INFO] __main__: [on_audio_received] Received audio chunk of size: 45606 bytes
2025-03-04 00:06:25,144 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:06:25,506 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:06:25,618 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:25,663 [INFO] __main__: [on_audio_received] Received audio chunk of size: 10206 bytes
2025-03-04 00:06:25,664 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:06:25,664 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:06:25,665 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:06:25,666 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 161216
2025-03-04 00:06:25,666 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:06:25,667 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:06:25,668 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 161216
2025-03-04 00:06:25,670 [INFO] __main__: [audio_consumer] Received end-of-stream marker.
2025-03-04 00:06:25,670 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 181016
2025-03-04 00:06:25,671 [INFO] __main__: [audio_consumer] After marking EOS: buffer_size=181016
2025-03-04 00:06:29,215 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:06:29,216 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:06:29,217 [INFO] __main__: [toggle_tts_async] Current state=True, target state=False
2025-03-04 00:06:29,218 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:06:29,218 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.ActiveState, buffer size: 792
2025-03-04 00:06:29,219 [INFO] __main__: [toggle_tts_async] Stopping audio sink
2025-03-04 00:06:29,219 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:06:29,220 [INFO] __main__: [handle_audio_state_changed] Buffer size: 792, End of stream: True
2025-03-04 00:06:29,221 [INFO] __main__: [toggle_tts_async] Audio sink stopped, new state: State.StoppedState
2025-03-04 00:06:29,222 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:29,224 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:06:29,225 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 1 items
2025-03-04 00:06:29,225 [INFO] __main__: [toggle_tts_async] Cleared 1 items from audio queue
2025-03-04 00:06:29,225 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:06:29,226 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:06:29,233 [INFO] __main__: [toggle_tts_async] Server responded in 0.01s with status 200
2025-03-04 00:06:29,233 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=False
2025-03-04 00:06:29,234 [INFO] __main__: [toggle_tts_async] Ensuring TTS is fully stopped on server
2025-03-04 00:06:29,239 [INFO] __main__: [toggle_tts_async] TTS stop request successful: {'status': 'success', 'message': 'TTS stopped'}
2025-03-04 00:06:29,240 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:06:29,240 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:06:29,240 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:06:29,240 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:06:29,240 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:29,241 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:06:29,242 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:06:29,242 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:29,243 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:06:29,266 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:29,267 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:29,267 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:06:29,267 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: False
2025-03-04 00:06:29,267 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:06:29,270 [INFO] __main__: [audio_consumer] Audio buffer is empty, stopping sink.
2025-03-04 00:06:29,270 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:06:29,270 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:29,271 [INFO] __main__: [audio_consumer] Audio sink stopped, state=State.StoppedState
2025-03-04 00:06:29,271 [INFO] __main__: [audio_consumer] Sending playback-complete to server
2025-03-04 00:06:29,272 [INFO] __main__: [audio_consumer] Sent playback-complete to server
2025-03-04 00:06:29,274 [INFO] __main__: [audio_consumer] Reset end-of-stream marker
2025-03-04 00:06:29,743 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:06:30,227 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:06:30,228 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:06:30,229 [INFO] __main__: [toggle_tts_async] Current state=False, target state=True
2025-03-04 00:06:30,229 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:06:30,230 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.StoppedState, buffer size: 0
2025-03-04 00:06:30,231 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:30,235 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:06:30,236 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 0 items
2025-03-04 00:06:30,237 [INFO] __main__: [toggle_tts_async] Cleared 0 items from audio queue
2025-03-04 00:06:30,237 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:06:30,238 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:06:30,249 [INFO] __main__: [toggle_tts_async] Server responded in 0.01s with status 200
2025-03-04 00:06:30,250 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=True
2025-03-04 00:06:30,252 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:06:30,254 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:06:30,256 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:06:30,256 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:06:30,256 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:06:30,258 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:06:30,267 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:06:30,267 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:06:30,268 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:06:30,381 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:30,382 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,382 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:06:30,383 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: True
2025-03-04 00:06:30,383 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:06:30,422 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:30,422 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,422 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:30,422 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,469 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:30,469 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,482 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:30,482 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,523 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:06:30,523 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,542 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:06:30,543 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:06:30,859 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:06:36,629 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:06:36,742 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:36,790 [INFO] __main__: [on_audio_received] Received audio chunk of size: 3606 bytes
2025-03-04 00:06:36,790 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:06:37,341 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:06:37,432 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:37,491 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:37,516 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:06:37,522 [INFO] __main__: [on_audio_received] Received audio chunk of size: 21006 bytes
2025-03-04 00:06:37,580 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:06:37,867 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:06:37,946 [INFO] __main__: [on_audio_received] Received audio chunk of size: 51606 bytes
2025-03-04 00:06:37,991 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:06:37,994 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:06:37,996 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:06:37,996 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 352200
2025-03-04 00:06:37,996 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:06:37,996 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:06:37,996 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 352200
2025-03-04 00:06:37,997 [INFO] __main__: [audio_consumer] Received end-of-stream marker.
2025-03-04 00:06:37,998 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 352200
2025-03-04 00:06:38,002 [INFO] __main__: [audio_consumer] After marking EOS: buffer_size=352200
2025-03-04 00:08:51,829 [INFO] __main__: [setup_audio] Initializing audio system
2025-03-04 00:08:51,836 [INFO] __main__: [setup_audio] Default audio output device found: OpenComm2 by Shokz
2025-03-04 00:08:51,837 [INFO] __main__: [setup_audio] Audio sink created with initial state: State.StoppedState
2025-03-04 00:08:51,837 [INFO] __main__: [QueueAudioDevice] Initialized
2025-03-04 00:08:51,838 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:08:51,859 [INFO] __main__: [setup_audio] Audio sink started with audio device
2025-03-04 00:08:51,859 [INFO] __main__: Audio setup completed, using async consumer loop
2025-03-04 00:08:51,951 [INFO] __main__: Created audio_consumer task
2025-03-04 00:08:51,956 [INFO] __main__: [audio_consumer] Starting async audio loop
2025-03-04 00:08:52,002 [INFO] __main__: Initial TTS state: False
2025-03-04 00:08:52,004 [INFO] __main__: Connected to ws://127.0.0.1:8000/ws/chat
2025-03-04 00:08:53,735 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:08:53,735 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:08:53,735 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:08:53,736 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:08:54,901 [INFO] __main__: Closing application...
2025-03-04 00:08:54,909 [INFO] __main__: [audio_consumer] Task was cancelled
2025-03-04 00:08:54,910 [INFO] __main__: [audio_consumer] Task was cancelled and is shutting down
2025-03-04 00:08:54,911 [INFO] __main__: Cleaning up before exit
2025-03-04 00:09:00,357 [INFO] __main__: [setup_audio] Initializing audio system
2025-03-04 00:09:00,363 [INFO] __main__: [setup_audio] Default audio output device found: OpenComm2 by Shokz
2025-03-04 00:09:00,364 [INFO] __main__: [setup_audio] Audio sink created with initial state: State.StoppedState
2025-03-04 00:09:00,364 [INFO] __main__: [QueueAudioDevice] Initialized
2025-03-04 00:09:00,365 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:09:00,386 [INFO] __main__: [setup_audio] Audio sink started with audio device
2025-03-04 00:09:00,386 [INFO] __main__: Audio setup completed, using async consumer loop
2025-03-04 00:09:00,495 [INFO] __main__: Created audio_consumer task
2025-03-04 00:09:00,499 [INFO] __main__: [audio_consumer] Starting async audio loop
2025-03-04 00:09:00,545 [INFO] __main__: Initial TTS state: False
2025-03-04 00:09:00,562 [INFO] __main__: Connected to ws://127.0.0.1:8000/ws/chat
2025-03-04 00:09:01,303 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:09:01,304 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:01,310 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:09:01,310 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:02,532 [INFO] __main__: [toggle_tts_async] Starting TTS toggle operation
2025-03-04 00:09:02,533 [INFO] __main__: [toggle_tts_async] Disabled TTS toggle button
2025-03-04 00:09:02,533 [INFO] __main__: [toggle_tts_async] Current state=False, target state=True
2025-03-04 00:09:02,534 [INFO] __main__: [toggle_tts_async] Cleaning up audio resources before toggle operation
2025-03-04 00:09:02,534 [INFO] __main__: [toggle_tts_async] Current audio state - sink: State.ActiveState, buffer size: 0
2025-03-04 00:09:02,535 [INFO] __main__: [toggle_tts_async] Stopping audio sink
2025-03-04 00:09:02,536 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:09:02,537 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:02,538 [INFO] __main__: [toggle_tts_async] Audio sink stopped, new state: State.StoppedState
2025-03-04 00:09:02,539 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:09:02,553 [INFO] __main__: [toggle_tts_async] Audio device buffer cleared
2025-03-04 00:09:02,554 [INFO] __main__: [toggle_tts_async] Clearing audio queue with 0 items
2025-03-04 00:09:02,555 [INFO] __main__: [toggle_tts_async] Cleared 0 items from audio queue
2025-03-04 00:09:02,555 [INFO] __main__: [toggle_tts_async] Audio resources cleaned up, proceeding with TTS toggle request
2025-03-04 00:09:02,556 [INFO] __main__: [toggle_tts_async] Sending toggle-tts request to server
2025-03-04 00:09:02,575 [INFO] __main__: [toggle_tts_async] Server responded in 0.02s with status 200
2025-03-04 00:09:02,579 [INFO] __main__: [toggle_tts_async] TTS toggle successful: new state=True
2025-03-04 00:09:02,584 [INFO] __main__: [toggle_tts_async] Reinitializing audio resources
2025-03-04 00:09:02,585 [INFO] __main__: [toggle_tts_async] Closing audio device
2025-03-04 00:09:02,589 [INFO] __main__: [QueueAudioDevice] Closing device (is_active=True)
2025-03-04 00:09:02,589 [INFO] __main__: [QueueAudioDevice] Device closed
2025-03-04 00:09:02,589 [INFO] __main__: [toggle_tts_async] Clearing audio device buffer
2025-03-04 00:09:02,590 [INFO] __main__: [QueueAudioDevice] Audio buffer cleared (was 0 bytes) and state reset
2025-03-04 00:09:02,592 [INFO] __main__: [toggle_tts_async] Reopening audio device
2025-03-04 00:09:02,592 [INFO] __main__: [QueueAudioDevice] Opened successfully with mode OpenModeFlag.ReadOnly
2025-03-04 00:09:02,593 [INFO] __main__: [toggle_tts_async] Restarting audio sink
2025-03-04 00:09:02,622 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:09:02,623 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:02,623 [INFO] __main__: [toggle_tts_async] Audio sink restarted, state: State.ActiveState
2025-03-04 00:09:02,623 [INFO] __main__: [toggle_tts_async] TTS toggle completed, final state: True
2025-03-04 00:09:02,624 [INFO] __main__: [toggle_tts_async] Waiting before re-enabling TTS button
2025-03-04 00:09:03,150 [INFO] __main__: [toggle_tts_async] TTS button re-enabled, toggle operation complete
2025-03-04 00:09:03,634 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.IdleState
2025-03-04 00:09:03,635 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:03,636 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.ActiveState
2025-03-04 00:09:03,636 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: False
2025-03-04 00:09:17,191 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:09:17,284 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:09:17,317 [INFO] __main__: [on_audio_received] Received audio chunk of size: 58806 bytes
2025-03-04 00:09:17,374 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:09:17,654 [INFO] __main__: [on_audio_received] Received audio chunk of size: 2406 bytes
2025-03-04 00:09:17,761 [INFO] __main__: [on_audio_received] Received audio chunk of size: 60006 bytes
2025-03-04 00:09:17,809 [INFO] __main__: [on_audio_received] Received audio chunk of size: 10206 bytes
2025-03-04 00:09:17,810 [INFO] __main__: [on_audio_received] Received audio chunk of size: 9606 bytes
2025-03-04 00:09:17,813 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:09:17,815 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:09:17,815 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 168232
2025-03-04 00:09:17,815 [INFO] __main__: [on_audio_received] Received audio chunk: b'audio:'
2025-03-04 00:09:17,816 [INFO] __main__: [on_audio_received] Received empty audio message, marking end of stream
2025-03-04 00:09:17,816 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 168232
2025-03-04 00:09:17,818 [INFO] __main__: [audio_consumer] Received end-of-stream marker.
2025-03-04 00:09:17,819 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 177832
2025-03-04 00:09:17,820 [INFO] __main__: [audio_consumer] After marking EOS: buffer_size=177832
2025-03-04 00:09:18,296 [INFO] __main__: [audio_consumer] After 0.5s: buffer_size=161448, sink_state=State.ActiveState
2025-03-04 00:09:19,016 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,121 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,227 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,332 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,438 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,544 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,650 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:19,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,654 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,854 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:20,954 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,456 [INFO] __main__: [audio_consumer] Audio buffer is empty, stopping sink.
2025-03-04 00:09:21,456 [INFO] __main__: [handle_audio_state_changed] Audio state changed to: State.StoppedState
2025-03-04 00:09:21,456 [INFO] __main__: [handle_audio_state_changed] Buffer size: 0, End of stream: True
2025-03-04 00:09:21,456 [INFO] __main__: [audio_consumer] Audio sink stopped, state=State.StoppedState
2025-03-04 00:09:21,457 [INFO] __main__: [audio_consumer] Sending playback-complete to server
2025-03-04 00:09:21,457 [ERROR] __main__: [audio_consumer] Error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,471 [ERROR] __main__: [audio_consumer] Traceback: Traceback (most recent call last):
  File "/home/jack/humptyprompty/frontend/client.py", line 713, in audio_consumer
    await self.ws_client.ws.send(json.dumps({"action": "playback-complete"}))
  File "/home/jack/envs/DEV/lib/python3.12/site-packages/websockets/asyncio/connection.py", line 476, in send
    async with self.send_context():
  File "/usr/lib/python3.12/contextlib.py", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/jack/envs/DEV/lib/python3.12/site-packages/websockets/asyncio/connection.py", line 957, in send_context
    raise self.protocol.close_exc from original_exc
websockets.exceptions.ConnectionClosedError: received 1012 (service restart); then sent 1012 (service restart)

2025-03-04 00:09:21,519 [INFO] __main__: [audio_consumer] Received end-of-stream marker.
2025-03-04 00:09:21,522 [INFO] __main__: [QueueAudioDevice] Marking end of stream, current buffer size: 0
2025-03-04 00:09:21,524 [INFO] __main__: [QueueAudioDevice] Buffer empty at end-of-stream mark
2025-03-04 00:09:21,527 [INFO] __main__: [audio_consumer] After marking EOS: buffer_size=0
2025-03-04 00:09:21,556 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:21,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,053 [INFO] __main__: [audio_consumer] After 0.5s: buffer_size=0, sink_state=State.StoppedState
2025-03-04 00:09:22,053 [INFO] __main__: [audio_consumer] Audio buffer is empty, stopping sink.
2025-03-04 00:09:22,054 [INFO] __main__: [audio_consumer] Audio sink stopped, state=State.StoppedState
2025-03-04 00:09:22,054 [INFO] __main__: [audio_consumer] Sending playback-complete to server
2025-03-04 00:09:22,054 [ERROR] __main__: [audio_consumer] Error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,055 [ERROR] __main__: [audio_consumer] Traceback: Traceback (most recent call last):
  File "/home/jack/humptyprompty/frontend/client.py", line 713, in audio_consumer
    await self.ws_client.ws.send(json.dumps({"action": "playback-complete"}))
  File "/home/jack/envs/DEV/lib/python3.12/site-packages/websockets/asyncio/connection.py", line 476, in send
    async with self.send_context():
  File "/usr/lib/python3.12/contextlib.py", line 210, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/jack/envs/DEV/lib/python3.12/site-packages/websockets/asyncio/connection.py", line 957, in send_context
    raise self.protocol.close_exc from original_exc
websockets.exceptions.ConnectionClosedError: received 1012 (service restart); then sent 1012 (service restart)

2025-03-04 00:09:22,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:22,954 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,456 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:23,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,658 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:24,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:25,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,456 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:26,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,256 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:27,956 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,256 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:28,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,354 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,654 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:29,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,656 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:30,954 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,354 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:31,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,456 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:32,954 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,256 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:33,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:34,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,676 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,771 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,868 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:35,963 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,059 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,257 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,356 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:36,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:37,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,854 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:38,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,754 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:39,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,854 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:40,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,354 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:41,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,654 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,756 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:42,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,257 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:43,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,154 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,356 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,854 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:44,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:45,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:46,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,354 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,856 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:47,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,156 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,256 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,556 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:48,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,054 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,254 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,554 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:49,954 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,056 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,454 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,656 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:50,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,255 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,555 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,655 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,755 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,855 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:51,955 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,055 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,155 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,256 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,355 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,455 [ERROR] __main__: WebSocket message processing error: received 1012 (service restart); then sent 1012 (service restart)
2025-03-04 00:09:52,479 [INFO] __main__: Closing application...
2025-03-04 00:09:52,484 [INFO] __main__: [audio_consumer] Task was cancelled
2025-03-04 00:09:52,493 [INFO] __main__: [audio_consumer] Task was cancelled and is shutting down
2025-03-04 00:09:52,508 [INFO] __main__: Cleaning up before exit
